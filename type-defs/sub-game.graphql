type SubGameSession implements Node {
  id: ID!
  owner: User!
  isActive: Boolean!
  userMustVerifyEpic: Boolean!
  maxPlayCount: Int
  maxActivePlayers: Int!
  queuedPlayers: [QueuedPlayer!]!
  alreadyPlayedUsers: [Player!]!
  activePlayers: [Player!]!
  isSubOnly: Boolean!
}

input StartSubGameSessionInput {
  ownerId: ID!
  userMustVerifyEpic: Boolean
  maxPlayCount: Int
  maxActivePlayers: Int
  isSubOnly: Boolean
}

type StartSubGameSessionPayload {
  subGameSession: SubGameSession!
}

input ActiveSubGameSessionByUsernameInput {
  """This "username" input is case sensitive and refers to a users Twitch "dipslay_name" not their "login" name. https://dev.twitch.tv/docs/api/reference#get-users"""
  username: ID!
}

type ActiveSubGameSessionByUsernamePayload {
  subGameSession: SubGameSession
}

input SubGameSessionByIdInput {
  id: ID!
}

type SubGameSessionByIdPayload {
  subGameSession: SubGameSession
}

input ActiveSubGameSessionByUserIdInput {
  id: ID!
}

type ActiveSubGameSessionByUserIdPayload {
  subGameSession: SubGameSession
}

input JoinSubGameSessionQueueInput {
  userId: ID!
  sessionId: ID!
}

type JoinSubGameSessionQueuePayload {
  subGameSession: SubGameSession!
}

input MovePlayerQueueOrderInput {
  userId: ID!
  order: Int!
  sessionId: ID!
}

type MovePlayerQueueOrderPayload {
  subGameSession: SubGameSession!
}
