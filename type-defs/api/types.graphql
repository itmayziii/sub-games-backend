schema {
  query: Query
  mutation: Mutation
}

type Query {
  # https://relay.dev/graphql/objectidentification.htm#sec-Node-Interface
  node(id: ID!): Node
  sessionsByUserId(input: SessionsByUserIdInput!): SessionsConnection!
  activeSubGameSessionByUsername(input: ActiveSubGameSessionByUsernameInput!): ActiveSubGameSessionByUsernamePayload!
  activeSubGameSessionByUserId(input: ActiveSubGameSessionByUserIdInput!): ActiveSubGameSessionByUserIdPayload!
  subGameSessionById(input: SubGameSessionByIdInput!): SubGameSessionByIdPayload!
}

type Mutation {
  joinSubGameSessionQueue(input: JoinSubGameSessionQueueInput!): JoinSubGameSessionQueuePayload!
  refreshToken(input: RefreshTokenInput): RefreshTokenPayload!
  startSubGameSession(input: StartSubGameSessionInput!): StartSubGameSessionPayload!
  movePlayerQueueOrder(input: MovePlayerQueueOrderInput!): MovePlayerQueueOrderPayload!
}

# https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

type Session implements Node {
  id: ID!
  """Last sub game session which may be be active or inactive."""
  subGameSession: SubGameSession @complexity(value: 3)
  """Currently active Twitch stream."""
  twitchSession: TwitchSession! @complexity(value: 20)
}

type TwitchSession {
  user: User!
  gameName: String!
  viewerCount: Int!
  thumbnailURL: String!
}

type SubGameSession implements Node {
  id: ID!
  owner: User!
  isActive: Boolean!
  userMustVerifyEpic: Boolean!
  maxPlayCount: Int
  maxActivePlayers: Int!
  queuedPlayers: [QueuedPlayer!]!
  alreadyPlayedUsers: [Player!]!
  activePlayers: [Player!]!
  isSubOnly: Boolean!
}

type User implements UserInterface & Node {
  id: ID!
  username: String!
}

type Player implements UserInterface & PlayerInterface & Node {
  id: ID!
  username: String!
  playCount: Int!
  allTimePlayCount: Int!
}

type QueuedPlayer implements UserInterface & PlayerInterface & Node {
  id: ID!
  username: String!
  playCount: Int!
  allTimePlayCount: Int!
  order: Int!
}

